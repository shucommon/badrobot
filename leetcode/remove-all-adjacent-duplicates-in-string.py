import time

class Solution:
    def removeDuplicates(self, S ):
        i = 0
        while i < len(S) - 1:
            if S[i] == S[i+1]:
                tmp = len(S)
                S = S[:i] + S[i+2:]
                if i > 0:
                    i = i-1
            else:
                i += 1

        return S


sl = Solution()
start = time.time()

rt = sl.removeDuplicates("abbaca")
print(rt)

rt = sl.removeDuplicates("aababaab")
print(rt)

rt = sl.removeDuplicates("")
print(rt)

end = time.time()
print(rt)
print((end - start) * 1000 , 'ms')
